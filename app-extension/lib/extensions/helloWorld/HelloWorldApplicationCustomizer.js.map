{"version":3,"sources":["extensions/helloWorld/HelloWorldApplicationCustomizer.ts"],"names":[],"mappings":"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","file":"extensions/helloWorld/HelloWorldApplicationCustomizer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport { Log } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseApplicationCustomizer,\r\n  PlaceholderContent,\r\n  PlaceholderName\r\n} from '@microsoft/sp-application-base';\r\nimport { Dialog } from '@microsoft/sp-dialog';\r\n\r\nimport * as strings from 'HelloWorldApplicationCustomizerStrings';\r\nimport styles from './AppCustomizer.module.scss';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nconst LOG_SOURCE: string = 'HelloWorldApplicationCustomizer';\r\n\r\n/**\r\n * If your command set uses the ClientSideComponentProperties JSON input,\r\n * it will be deserialized into the BaseExtension.properties object.\r\n * You can define an interface to describe it.\r\n */\r\nexport interface IHelloWorldApplicationCustomizerProperties {\r\n  Top: string;\r\n  Bottom: string;\r\n}\r\n\r\nexport default class HelloWorldApplicationCustomizer\r\n  extends BaseApplicationCustomizer<IHelloWorldApplicationCustomizerProperties> {\r\n\r\n  // These have been added\r\n  private _topPlaceholder: PlaceholderContent | undefined;\r\n  private _bottomPlaceholder: PlaceholderContent | undefined;\r\n  @override\r\n  public onInit(): Promise<void> {\r\n    Log.info(LOG_SOURCE, `Initialized ${strings.Title}`);\r\n\r\n    // Added to handle possible changes on the existence of placeholders.\r\n    this.context.placeholderProvider.changedEvent.add(this, this._renderPlaceHolders);\r\n\r\n    // Call render method for generating the HTML elements.\r\n    this._renderPlaceHolders();\r\n    return Promise.resolve<void>();\r\n  }\r\n\r\n  private _renderPlaceHolders(): void {\r\n\r\n    console.log('HelloWorldApplicationCustomizer._renderPlaceHolders()');\r\n    console.log('Available placeholders: ',\r\n      this.context.placeholderProvider.placeholderNames.map(name => PlaceholderName[name]).join(', '));\r\n\r\n    // Handling the top placeholder\r\n    if (!this._topPlaceholder) {\r\n      this._topPlaceholder =\r\n        this.context.placeholderProvider.tryCreateContent(\r\n          PlaceholderName.Top,\r\n          { onDispose: this._onDispose });\r\n\r\n      // The extension should not assume that the expected placeholder is available.\r\n      if (!this._topPlaceholder) {\r\n        console.error('The expected placeholder (Top) was not found.');\r\n        return;\r\n      }\r\n\r\n      if (this.properties) {\r\n        let topString: string = this.properties.Top;\r\n        if (!topString) {\r\n          topString = '(Top property was not defined.)';\r\n        }\r\n\r\n        if (this._topPlaceholder.domElement) {\r\n          this._topPlaceholder.domElement.innerHTML = `\r\n      <div class=\"${styles.app}\">\r\n        <div class=\"ms-bgColor-green ms-fontColor-white ${styles.top}\">\r\n          <i class=\"ms-Icon ms-Icon--Info\" aria-hidden=\"true\"></i> ${escape(topString)}\r\n        </div>\r\n      </div>`;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handling the bottom placeholder\r\n    if (!this._bottomPlaceholder) {\r\n      this._bottomPlaceholder =\r\n        this.context.placeholderProvider.tryCreateContent(\r\n          PlaceholderName.Bottom,\r\n          { onDispose: this._onDispose });\r\n\r\n      // The extension should not assume that the expected placeholder is available.\r\n      if (!this._bottomPlaceholder) {\r\n        console.error('The expected placeholder (Bottom) was not found.');\r\n        return;\r\n      }\r\n\r\n      if (this.properties) {\r\n        let bottomString: string = this.properties.Bottom;\r\n        if (!bottomString) {\r\n          bottomString = '(Bottom property was not defined.)';\r\n        }\r\n\r\n        if (this._bottomPlaceholder.domElement) {\r\n          this._bottomPlaceholder.domElement.innerHTML = `\r\n      <div class=\"${styles.app}\">\r\n        <div class=\"ms-bgColor-green ms-fontColor-white ${styles.bottom}\">\r\n          <i class=\"ms-Icon ms-Icon--Info\" aria-hidden=\"true\"></i> ${escape(bottomString)}\r\n        </div>\r\n      </div>`;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private _onDispose(): void {\r\n    console.log('[HelloWorldApplicationCustomizer._onDispose] Disposed custom top and bottom placeholders.');\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\src"}